class Solution {
public:
  vector<int>lanes={1,2,3};
  
  int last_pos;
  vector<vector<int>>dp;
  int rec(int pos, int lane,vector<int>&obstacles){
      if(pos==last_pos) return 0;
      if(dp[pos][lane]!=-1) return dp[pos][lane];
      if(obstacles[pos]==lane){
          return INT_MAX;
      }
      
      if(obstacles[pos+1]!=lane){
          dp[pos][lane]=rec(pos+1,lane,obstacles);
      }
      else{
         int ans=INT_MAX;
          for(int i=0;i<=2;i++){
              if(lane!=lanes[i]){
                  ans=min(rec(pos,lanes[i],obstacles),ans);
              }
          }
        dp[pos][lane]=1+ans;  
      }
         
        
      
      
      return dp[pos][lane];
  }
  int minSideJumps(vector<int>& obstacles) {
      last_pos=obstacles.size()-1;
      dp.resize(obstacles.size(),vector<int>(4,-1));
      return rec(0,2,obstacles);
  }
};
