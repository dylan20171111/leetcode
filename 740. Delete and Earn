class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<int> dp(nums.size());
        dp[0] = nums[0];
        for (int i=1 ; i<nums.size(); ++i) {
            auto iter_equal = upper_bound(nums.begin(), nums.begin()+i, nums[i]-1);
            int count = nums.begin()+i-iter_equal+1;
            
            auto iter = upper_bound(nums.begin(), nums.begin()+i, nums[i]-2);
            if (iter == nums.begin()) {
                dp[i] = std::max(dp[i-1], nums[i]*count);
            } else {
                iter = std::prev(iter);
                int j = iter-nums.begin();
                dp[i] = std::max(dp[i-1], nums[i]*count + dp[j]);
            }
        }
        return dp.back();
    }
};
